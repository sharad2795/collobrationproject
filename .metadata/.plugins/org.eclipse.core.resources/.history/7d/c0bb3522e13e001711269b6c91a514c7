app.controller('blogcontroller',['$scope','blogservice','$location','$rootScope','$cookieStore','$http',
						function($scope, blogservice, $location, $rootScope,$cookieStore, $http)
						{
							console.log("inside blogController...")
						//	var this = this;
							this.blog = {
								id : '',
								title: '',
								user_id:'',
								description: '',
								datecreated: '',
								status: '',
								comments: '',
								errorcode : '',
								errormessage : '',
								
							};
							this.blogs=[];

	
								this.fetchallblogs = function()
								{
									console.log("fetchAllblogs...")
									blogservice.fetchallblogs()
											.then(
													function(d) {
														this.blogs=d;
														$rootScope.blogs=d;
														$location.path("/showallblogs")
													},
													function(errResponse) {
														console.error('Error while fetching Users');
													});
								};

								this.displayfetchallblogs=function(){
									{
										console.log("displayallblogs");
									this.fetchallblogs()
									}
								};

								this.update=function(blog){
									{
										console.log("starting of update blog")
										this.blog.id=blog;
										console.log(this.blog)
										blogservice.fetchblogbyid(this.blog)
										.then(
										function(d){
											this.blog=d;
											$rootScope.blog=d;
											$location.path("/updateblog")
							
										},
										function(errResponse){
											console.error("error while feching blogs")
										});
									}
								}
								
							this.createblog = function(blog) {
								console.log("createblogr...")
								blogservice.createblog(blog)
										.then(
												function(d) {
													alert("blog created")
													$location.path("/")
												},
												function(errResponse) {
													console
															.error('Error while creating blog.');
												});
							};
							this.updateblog = function(blog) {
								console.log("updateblogr...")
								blogservice.updateblog(blog)
										.then(
												function(d) {
													if(d.errorcode==400)
													{
														alert("you have to log in to perform this task");
													}
													else if(d.errorcode==404)
													{
														alert("no such blog founds please try again");
													}
													else if(d.errorcode==406)
													{
														alert("you are not authorized to update this blog");
													}
													else if(d.errorcode==200)
													{
														alert("blog updated")
													}
													$location.path("/")
													
												},
												function(errResponse) {
													console
															.error('Error while updating blog.');
												});
							};

							
							this.submit = function() {
								{
									console.log('Saving New blog', this.blog);
									this.createblog(this.blog);
								}
							};
							
							this.edit = function() {
								{
									console.log('edit blog', $rootScope.blog);
									this.updateblog($rootScope.blog);
								}
							};
							this.deleteblog=function(blog){
								console.log("starting of delete blog")
								blogservice.deleteblog(blog)
								.then(
								function(d)
								{
									this.blog=d;
									if(d.errorcode==400)
									{
										alert("you have to log in to perform this task");
									}
									else if(d.errorcode==404)
									{
										alert("no such blog founds please try again");
									}
									else if(d.errorcode==406)
									{
										alert("you are not authorized to delete this blog");
									}
									else if(d.errorcode==200)
									{
										alert("blog deleted")
									}
									$location.path("/")
								}
								)
							}
							this.remove=function(blog)
							{
								console.log("start of remove blog")
								this.blog.id=blog;
								console.log(this.blog)
								this.deleteblog(this.blog)
							};
							this.reset = function() {
								this.user = {
									id : '',
									name : '',
									password : '',
									confirmpassword : '',
									contact : '',
									address : '',
									email : '',
									role:'',
									errorcode : '',
									errormessage : ''
								};
								$scope.myForm.$setPristine(); // reset Form
							};
							
} ]);

